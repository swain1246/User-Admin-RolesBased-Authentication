@using UserRoles.ViewModels
@model ChangePasswordViewModel

@{
	ViewData["Title"] = "Change Password";
	Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<div class="account-container">
	<div class="account-box">
		<h2 class="text-center mb-4">Change Password</h2>
		<form asp-action="ChangePassword" method="post">
			@Html.AntiForgeryToken()
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="mb-3">
				<lable asp-for="Email" class="form-label">Email</lable>
				<input asp-for="Email" class="form-control" />
			</div>
			<div class="mb-3">
				<lable asp-for="NewPassword" class="form-label">New Password</lable>
				<input asp-for="NewPassword" class="form-control" />
				<span asp-validation-for="NewPassword" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<lable asp-for="ConfirmNewPassword" class="form-label">Confirm New Password</lable>
				<input asp-for="ConfirmNewPassword" class="form-control" />
				<span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
			</div>
			<button type="submit" class="btn btn-success w-100 p-2">Change Password</button>
			<div class="text-center mt-2">
				<a asp-controller="Account" asp-action="VerifyEmail" class="text-decoration-none">Back</a>
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}